{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/_components/alert.component.ts","webpack:///src/app/_components/alert.component.html","webpack:///src/app/_helpers/auth.guard.ts","webpack:///src/app/_helpers/error.interceptor.ts","webpack:///src/app/_helpers/fake-backend.ts","webpack:///src/app/_helpers/jwt.interceptor.ts","webpack:///src/app/_models/alert.ts","webpack:///src/app/_services/account.service.ts","webpack:///src/app/_services/alert.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/payment-details/payment-detail-list/payment-detail-list.component.ts","webpack:///src/app/payment-details/payment-detail-list/payment-detail-list.component.html","webpack:///src/app/payment-details/payment-detail/payment-detail.component.ts","webpack:///src/app/payment-details/payment-detail/payment-detail.component.html","webpack:///src/app/payment-details/payment-details.component.ts","webpack:///src/app/payment-details/payment-details.component.html","webpack:///src/app/shared/payment-detail.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AlertComponent","router","alertService","fade","alerts","alertSubscription","onAlert","subscribe","alert","message","filter","x","keepAfterRouteChange","forEach","push","autoClose","setTimeout","removeAlert","routeSubscription","events","event","clear","unsubscribe","includes","find","classes","alertTypeClass","Success","Info","Warning","type","join","selector","templateUrl","AuthGuard","accountService","route","state","user","userValue","navigate","queryParams","returnUrl","url","providedIn","ErrorInterceptor","request","next","handle","pipe","err","status","logout","error","statusText","users","JSON","parse","localStorage","getItem","FakeBackendInterceptor","method","headers","body","handleRoute","endsWith","authenticate","register","getUsers","match","getUserById","updateUser","deleteUser","username","password","ok","firstName","lastName","token","length","Math","max","map","setItem","stringify","isLoggedIn","unauthorized","idFromUrl","params","Object","assign","get","urlParts","split","parseInt","fakeBackendProvider","provide","useClass","multi","JwtInterceptor","isApiUrl","startsWith","apiUrl","clone","setHeaders","Authorization","Alert","init","AlertType","AccountService","http","userSubject","asObservable","post","removeItem","put","value","AlertService","subject","defaultId","options","accountModule","AccountModule","usersModule","UsersModule","hotelsModule","HotelsModule","routes","path","component","canActivate","loadChildren","redirectTo","AppRoutingModule","forRoot","imports","AppComponent","AppModule","withComponents","declarations","providers","bootstrap","HomeComponent","PaymentDetailListComponent","service","toastr","refreshList","pd","formData","PMId","confirm","deletePaymentDetail","res","warning","console","log","styles","PaymentDetailComponent","resetForm","form","reset","CardOwnerName","CardNumber","ExpirationDate","CVV","insertRecord","updateRecord","postPaymentDetail","success","putPaymentDetail","info","onSubmit","PaymentDetailsComponent","PaymentDetailService","rootURL","toPromise","list","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\r\nimport { Router, NavigationStart } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { Alert, AlertType } from '@app/_models/alert';\r\nimport { AlertService } from '@app/_services/alert.service';\r\n\r\n@Component({ selector: 'alert', templateUrl: 'alert.component.html' })\r\nexport class AlertComponent implements OnInit, OnDestroy {\r\n    @Input() id = 'default-alert';\r\n    @Input() fade = true;\r\n\r\n    alerts: Alert[] = [];\r\n    alertSubscription: Subscription;\r\n    routeSubscription: Subscription;\r\n\r\n    constructor(private router: Router, private alertService: AlertService) { }\r\n\r\n    ngOnInit() {\r\n        // subscribe to new alert notifications\r\n        this.alertSubscription = this.alertService.onAlert(this.id)\r\n            .subscribe(alert => {\r\n                // clear alerts when an empty alert is received\r\n                if (!alert.message) {\r\n                    // filter out alerts without 'keepAfterRouteChange' flag\r\n                    this.alerts = this.alerts.filter(x => x.keepAfterRouteChange);\r\n\r\n                    // remove 'keepAfterRouteChange' flag on the rest\r\n                    this.alerts.forEach(x => delete x.keepAfterRouteChange);\r\n                    return;\r\n                }\r\n\r\n                // add alert to array\r\n                this.alerts.push(alert);\r\n\r\n                // auto close alert if required\r\n                if (alert.autoClose) {\r\n                    setTimeout(() => this.removeAlert(alert), 3000);\r\n                }\r\n           });\r\n\r\n        // clear alerts on location change\r\n        this.routeSubscription = this.router.events.subscribe(event => {\r\n            if (event instanceof NavigationStart) {\r\n                this.alertService.clear(this.id);\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        // unsubscribe to avoid memory leaks\r\n        this.alertSubscription.unsubscribe();\r\n        this.routeSubscription.unsubscribe();\r\n    }\r\n\r\n    removeAlert(alert: Alert) {\r\n        // check if already removed to prevent error on auto close\r\n        if (!this.alerts.includes(alert)) return;\r\n\r\n        if (this.fade) {\r\n            // fade out alert\r\n            this.alerts.find(x => x === alert).fade = true;\r\n\r\n            // remove alert after faded out\r\n            setTimeout(() => {\r\n                this.alerts = this.alerts.filter(x => x !== alert);\r\n            }, 250);\r\n        } else {\r\n            // remove alert\r\n            this.alerts = this.alerts.filter(x => x !== alert);\r\n        }\r\n    }\r\n\r\n    cssClass(alert: Alert) {\r\n        if (!alert) return;\r\n\r\n        const classes = ['alert', 'alert-dismissable', 'mt-4', 'container'];\r\n                \r\n        const alertTypeClass = {\r\n            [AlertType.Success]: 'alert alert-success',\r\n            [AlertType.Error]: 'alert alert-danger',\r\n            [AlertType.Info]: 'alert alert-info',\r\n            [AlertType.Warning]: 'alert alert-warning'\r\n        }\r\n\r\n        classes.push(alertTypeClass[alert.type]);\r\n\r\n        if (alert.fade) {\r\n            classes.push('fade');\r\n        }\r\n\r\n        return classes.join(' ');\r\n    }\r\n}","<div *ngFor=\"let alert of alerts\" class=\"{{cssClass(alert)}}\">\r\n    <a class=\"close\" (click)=\"removeAlert(alert)\">&times;</a>\r\n    <span [innerHTML]=\"alert.message\"></span>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\n\r\nimport { AccountService } from '@app/_services/account.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(\r\n        private router: Router,\r\n        private accountService: AccountService\r\n    ) {}\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        const user = this.accountService.userValue;\r\n        if (user) {\r\n            // authorised so return true\r\n            return true;\r\n        }\r\n\r\n        // not logged in so redirect to login page with the return url\r\n        this.router.navigate(['/account/login'], { queryParams: { returnUrl: state.url }});\r\n        return false;\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { AccountService } from '@app/_services/account.service';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n    constructor(private accountService: AccountService) {}\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(request).pipe(catchError(err => {\r\n            if (err.status === 401) {\r\n                // auto logout if 401 response returned from api\r\n                this.accountService.logout();\r\n            }\r\n            \r\n            const error = err.error.message || err.statusText;\r\n            return throwError(error);\r\n        }))\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpResponse, HttpHandler, HttpEvent, HttpInterceptor, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { Observable, of, throwError } from 'rxjs';\r\nimport { delay, mergeMap, materialize, dematerialize } from 'rxjs/operators';\r\n\r\n// array in local storage for registered users\r\nlet users = JSON.parse(localStorage.getItem('users')) || [];\r\n\r\n@Injectable()\r\nexport class FakeBackendInterceptor implements HttpInterceptor {\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        const { url, method, headers, body } = request;\r\n\r\n        // wrap in delayed observable to simulate server api call\r\n        return of(null)\r\n            .pipe(mergeMap(handleRoute))\r\n            .pipe(materialize()) // call materialize and dematerialize to ensure delay even if an error is thrown (https://github.com/Reactive-Extensions/RxJS/issues/648)\r\n            .pipe(delay(500))\r\n            .pipe(dematerialize());\r\n\r\n        function handleRoute() {\r\n            switch (true) {\r\n                case url.endsWith('/users/authenticate') && method === 'POST':\r\n                    return authenticate();\r\n                case url.endsWith('/users/register') && method === 'POST':\r\n                    return register();\r\n                case url.endsWith('/users') && method === 'GET':\r\n                    return getUsers();\r\n                case url.match(/\\/users\\/\\d+$/) && method === 'GET':\r\n                    return getUserById();\r\n                case url.match(/\\/users\\/\\d+$/) && method === 'PUT':\r\n                    return updateUser();\r\n                case url.match(/\\/users\\/\\d+$/) && method === 'DELETE':\r\n                    return deleteUser();\r\n                default:\r\n                    // pass through any requests not handled above\r\n                    return next.handle(request);\r\n            }    \r\n        }\r\n\r\n        // route functions\r\n\r\n        function authenticate() {\r\n            const { username, password } = body;\r\n            const user = users.find(x => x.username === username && x.password === password);\r\n            if (!user) return error('Username or password is incorrect');\r\n            return ok({\r\n                id: user.id,\r\n                username: user.username,\r\n                firstName: user.firstName,\r\n                lastName: user.lastName,\r\n                token: 'fake-jwt-token'\r\n            })\r\n        }\r\n\r\n        function register() {\r\n            const user = body\r\n\r\n            if (users.find(x => x.username === user.username)) {\r\n                return error('Username \"' + user.username + '\" is already taken')\r\n            }\r\n\r\n            user.id = users.length ? Math.max(...users.map(x => x.id)) + 1 : 1;\r\n            users.push(user);\r\n            localStorage.setItem('users', JSON.stringify(users));\r\n            return ok();\r\n        }\r\n\r\n        function getUsers() {\r\n            if (!isLoggedIn()) return unauthorized();\r\n            return ok(users);\r\n        }\r\n\r\n        function getUserById() {\r\n            if (!isLoggedIn()) return unauthorized();\r\n\r\n            const user = users.find(x => x.id === idFromUrl());\r\n            return ok(user);\r\n        }\r\n\r\n        function updateUser() {\r\n            if (!isLoggedIn()) return unauthorized();\r\n\r\n            let params = body;\r\n            let user = users.find(x => x.id === idFromUrl());\r\n\r\n            // only update password if entered\r\n            if (!params.password) {\r\n                delete params.password;\r\n            }\r\n\r\n            // update and save user\r\n            Object.assign(user, params);\r\n            localStorage.setItem('users', JSON.stringify(users));\r\n\r\n            return ok();\r\n        }\r\n\r\n        function deleteUser() {\r\n            if (!isLoggedIn()) return unauthorized();\r\n\r\n            users = users.filter(x => x.id !== idFromUrl());\r\n            localStorage.setItem('users', JSON.stringify(users));\r\n            return ok();\r\n        }\r\n\r\n        // helper functions\r\n\r\n        function ok(body?) {\r\n            return of(new HttpResponse({ status: 200, body }))\r\n        }\r\n\r\n        function error(message) {\r\n            return throwError({ error: { message } });\r\n        }\r\n\r\n        function unauthorized() {\r\n            return throwError({ status: 401, error: { message: 'Unauthorised' } });\r\n        }\r\n\r\n        function isLoggedIn() {\r\n            return headers.get('Authorization') === 'Bearer fake-jwt-token';\r\n        }\r\n\r\n        function idFromUrl() {\r\n            const urlParts = url.split('/');\r\n            return parseInt(urlParts[urlParts.length - 1]);\r\n        }\r\n    }\r\n}\r\n\r\nexport const fakeBackendProvider = {\r\n    // use fake backend in place of Http service for backend-less development\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: FakeBackendInterceptor,\r\n    multi: true\r\n};","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { environment } from '@environments/environment';\r\nimport { AccountService } from '@app/_services/account.service';\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n    constructor(private accountService: AccountService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        // add auth header with jwt if user is logged in and request is to the api url\r\n        const user = this.accountService.userValue;\r\n        const isLoggedIn = user && user.token;\r\n        const isApiUrl = request.url.startsWith(environment.apiUrl);\r\n        if (isLoggedIn && isApiUrl) {\r\n            request = request.clone({\r\n                setHeaders: {\r\n                    Authorization: `Bearer ${user.token}`\r\n                }\r\n            });\r\n        }\r\n\r\n        return next.handle(request);\r\n    }\r\n}","export class Alert {\r\n    id: string;\r\n    type: AlertType;\r\n    message: string;\r\n    autoClose: boolean;\r\n    keepAfterRouteChange: boolean;\r\n    fade: boolean;\r\n\r\n    constructor(init?:Partial<Alert>) {\r\n        Object.assign(this, init);\r\n    }\r\n}\r\n\r\nexport enum AlertType {\r\n    Success,\r\n    Error,\r\n    Info,\r\n    Warning\r\n}","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { environment } from '@environments/environment';\r\nimport { User } from '@app/_models/user';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AccountService {\r\n    private userSubject: BehaviorSubject<User>;\r\n    public user: Observable<User>;\r\n\r\n    constructor(\r\n        private router: Router,\r\n        private http: HttpClient\r\n    ) {\r\n        this.userSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('user')));\r\n        this.user = this.userSubject.asObservable();\r\n    }\r\n\r\n    public get userValue(): User {\r\n        return this.userSubject.value;\r\n    }\r\n\r\n    login(username, password) {\r\n        return this.http.post<User>(`${environment.apiUrl}/users/authenticate`, { username, password })\r\n            .pipe(map(user => {\r\n                // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n                localStorage.setItem('user', JSON.stringify(user));\r\n                this.userSubject.next(user);\r\n                return user;\r\n            }));\r\n    }\r\n\r\n    logout() {\r\n        // remove user from local storage and set current user to null\r\n        localStorage.removeItem('user');\r\n        this.userSubject.next(null);\r\n        this.router.navigate(['/account/login']);\r\n    }\r\n\r\n    register(user: User) {\r\n        return this.http.post(`${environment.apiUrl}/users/register`, user);\r\n    }\r\n\r\n    getAll() {\r\n        return this.http.get<User[]>(`${environment.apiUrl}/users`);\r\n    }\r\n\r\n    getById(id: string) {\r\n        return this.http.get<User>(`${environment.apiUrl}/users/${id}`);\r\n    }\r\n\r\n    update(id, params) {\r\n        return this.http.put(`${environment.apiUrl}/users/${id}`, params)\r\n            .pipe(map(x => {\r\n                // update stored user if the logged in user updated their own record\r\n                if (id == this.userValue.id) {\r\n                    // update local storage\r\n                    const user = { ...this.userValue, ...params };\r\n                    localStorage.setItem('user', JSON.stringify(user));\r\n\r\n                    // publish updated user to subscribers\r\n                    this.userSubject.next(user);\r\n                }\r\n                return x;\r\n            }));\r\n    }\r\n\r\n    delete(id: string) {\r\n        return this.http.delete(`${environment.apiUrl}/users/${id}`)\r\n            .pipe(map(x => {\r\n                // auto logout if the logged in user deleted their own record\r\n                if (id == this.userValue.id) {\r\n                    this.logout();\r\n                }\r\n                return x;\r\n            }));\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\n\r\nimport { Alert, AlertType } from '@app/_models/alert';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AlertService {\r\n    private subject = new Subject<Alert>();\r\n    private defaultId = 'default-alert';\r\n\r\n    // enable subscribing to alerts observable\r\n    onAlert(id = this.defaultId): Observable<Alert> {\r\n        return this.subject.asObservable().pipe(filter(x => x && x.id === id));\r\n    }\r\n\r\n    // convenience methods\r\n    success(message: string, options?: any) {\r\n        this.alert(new Alert({ ...options, type: AlertType.Success, message }));\r\n    }\r\n\r\n    error(message: string, options?: any) {\r\n        this.alert(new Alert({ ...options, type: AlertType.Error, message }));\r\n    }\r\n\r\n    info(message: string, options?: any) {\r\n        this.alert(new Alert({ ...options, type: AlertType.Info, message }));\r\n    }\r\n\r\n    warn(message: string, options?: any) {\r\n        this.alert(new Alert({ ...options, type: AlertType.Warning, message }));\r\n    }\r\n\r\n    // main alert method    \r\n    alert(alert: Alert) {\r\n        alert.id = alert.id || this.defaultId;\r\n        this.subject.next(alert);\r\n    }\r\n\r\n    // clear alerts\r\n    clear(id = this.defaultId) {\r\n        this.subject.next(new Alert({ id }));\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { PaymentDetailsComponent } from './payment-details/payment-details.component';\r\n\r\nimport { AuthGuard } from './_helpers/auth.guard';\r\nconst accountModule = () => import('./account/account.module').then(x => x.AccountModule);\r\nconst usersModule = () => import('./users/users.module').then(x => x.UsersModule);\r\nconst hotelsModule = () => import('./hotels/hotels.module').then(x => x.HotelsModule);\r\nconst routes: Routes = [\r\n    { path: '', component: HomeComponent, canActivate: [AuthGuard] },\r\n    { path: 'users', loadChildren: usersModule, canActivate: [AuthGuard] },\r\n    { path: 'hotels', loadChildren: hotelsModule, canActivate: [AuthGuard] },\r\n    { path: 'account', loadChildren: accountModule },\r\n    { path: 'payment', component: PaymentDetailsComponent,canActivate: [AuthGuard] },\r\n   \r\n\r\n    // otherwise redirect to home\r\n    { path: '**', redirectTo: '' }\r\n  \r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }","import { Component } from '@angular/core';\n\nimport { AccountService } from './_services/account.service';\nimport { User } from './_models/user';\n\n@Component({ selector: 'app', templateUrl: 'app.component.html' })\nexport class AppComponent {\n    user: User;\n\n    constructor(private accountService: AccountService) {\n        this.accountService.user.subscribe(x => this.user = x);\n    }\n\n    logout() {\n        this.accountService.logout();\n    }\n}","<!-- nav -->\n<nav class=\"navbar navbar-expand navbar-dark bg-dark\" *ngIf=\"user\">\n  <div class=\"navbar-nav\">\n      <a class=\"nav-item nav-link\" routerLink=\"/\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\">Home</a>\n      <a class=\"nav-item nav-link\" routerLink=\"/users\" routerLinkActive=\"active\">Users</a>\n      <a class=\"nav-item nav-link\" routerLink=\"/payment\" routerLinkActive=\"active\">Payment</a>\n      <a class=\"nav-item nav-link\" routerLink=\"/hotels\" routerLinkActive=\"active\">Hotels</a>\n      <a class=\"nav-item nav-link\" (click)=\"logout()\">Logout</a>\n  </div>\n</nav>\n\n<!-- main app container -->\n<div class=\"app-container\" [ngClass]=\"{ 'bg-light': user }\">\n  <alert></alert>\n  <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { AgGridModule } from 'ag-grid-angular';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormsModule } from \"@angular/forms\";\nimport { HttpClientModule,HTTP_INTERCEPTORS  } from \"@angular/common/http\";\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n// used to create fake backend\nimport { fakeBackendProvider } from './_helpers/fake-backend';\n\n\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { JwtInterceptor } from './_helpers/jwt.interceptor';\nimport {  ErrorInterceptor } from './_helpers/error.interceptor';\nimport { HomeComponent } from './home/home.component';\nimport { AlertComponent } from './_components/alert.component';\n\nimport { ToastrModule } from 'ngx-toastr';\nimport { AppComponent } from './app.component';\nimport { PaymentDetailsComponent } from './payment-details/payment-details.component';\nimport { PaymentDetailComponent } from './payment-details/payment-detail/payment-detail.component';\nimport { PaymentDetailListComponent } from './payment-details/payment-detail-list/payment-detail-list.component';\nimport { PaymentDetailService } from './shared/payment-detail.service';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PaymentDetailsComponent,\n    PaymentDetailComponent,\n    PaymentDetailListComponent,  \n    HomeComponent ,\n    AlertComponent\n  ],\n  imports: [\n    BrowserModule,\n    AgGridModule.withComponents([]),\n    FormsModule, \n    ReactiveFormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,    \n    AppRoutingModule,\n    ToastrModule.forRoot()\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n\n    // provider used to create fake backend\n    fakeBackendProvider,    \n    PaymentDetailService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component } from '@angular/core';\r\n\r\nimport { User } from '@app/_models/user';\r\nimport { AccountService } from '@app/_services/account.service';\r\n\r\n@Component({ templateUrl: 'home.component.html' })\r\nexport class HomeComponent {\r\n    user: User;\r\n\r\n    constructor(private accountService: AccountService) {\r\n        this.user = this.accountService.userValue;\r\n    }\r\n}","<div class=\"p-4\">\r\n    <div class=\"container\">\r\n        <h1>Hi {{user.firstName}}!</h1>\r\n        <p>You're logged in with Angular 9!!</p>\r\n        <p><a routerLink=\"/users\">Manage Users</a></p>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { PaymentDetailService } from 'src/app/shared/payment-detail.service';\nimport { PaymentDetail } from 'src/app/shared/payment-detail.model';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-payment-detail-list',\n  templateUrl: './payment-detail-list.component.html',\n  styles: [\n  ]\n})\nexport class PaymentDetailListComponent implements OnInit {\n\n  constructor(public service: PaymentDetailService,\n    private toastr: ToastrService) { }\n\n  ngOnInit() {\n    this.service.refreshList();\n  }\n  populateForm(pd: PaymentDetail) {\n    this.service.formData = Object.assign({}, pd);\n  }\n  onDelete(PMId) {\n    if (confirm('Are you sure to delete this record ?')) {\n      this.service.deletePaymentDetail(PMId)\n        .subscribe(res => {\n          debugger;\n          this.service.refreshList();\n          this.toastr.warning('Deleted successfully', 'Payment Detail Register');\n        },\n          err => {\n            debugger;\n            console.log(err);\n          })\n    }\n  }\n\n}\n","<table class=\"table table-hover\">\n    <tr *ngFor=\"let pd of service.list\">\n      <td (click)=\"populateForm(pd)\">{{pd.CardOwnerName}}</td>\n      <td (click)=\"populateForm(pd)\">{{pd.CardNumber}}</td>\n      <td (click)=\"populateForm(pd)\">{{pd.ExpirationDate}}</td>\n      <td>\n        <i class=\"far fa-trash-alt fa-lg text-danger\" (click)=\"onDelete(pd.PMId)\"></i>\n      </td>\n    </tr>\n  </table>","import { NgForm } from '@angular/forms';\nimport { PaymentDetailService } from 'src/app/shared/payment-detail.service';\nimport { Component, OnInit } from '@angular/core';\n\nimport { ToastrService } from 'ngx-toastr';\n\n\n@Component({\n  selector: 'app-payment-detail',\n  templateUrl: './payment-detail.component.html',\n  styles: [\n  ]\n})\nexport class PaymentDetailComponent implements OnInit {\n\n  constructor(public service: PaymentDetailService,\n    private toastr: ToastrService) { }\n\n  ngOnInit(): void {\n    this.resetForm();\n  }\n\n  resetForm(form?: NgForm) {\n    if (form != null)\n      form.form.reset();\n    this.service.formData = {\n      PMId: 0,\n      CardOwnerName: '',\n      CardNumber: '',\n      ExpirationDate: '',\n      CVV: ''\n    }\n  }\n  onSubmit(form: NgForm) {\n    if (this.service.formData.PMId == 0)\n      this.insertRecord(form);\n    else\n      this.updateRecord(form);\n  }\n\n  insertRecord(form: NgForm) {\n    this.service.postPaymentDetail().subscribe(\n      res => {\n        debugger;\n        this.resetForm(form);\n        this.toastr.success('Submitted successfully', 'Payment Detail Register');\n        this.service.refreshList();\n      },\n      err => {\n        debugger;\n        console.log(err);\n      }\n    )\n  }\n  updateRecord(form: NgForm) {\n    this.service.putPaymentDetail().subscribe(\n      res => {\n        this.resetForm(form);\n        this.toastr.info('Submitted successfully', 'Payment Detail Register');\n        this.service.refreshList();\n      },\n      err => {\n        console.log(err);\n      }\n    )\n  }\n\n}\n","<form #form=\"ngForm\" autocomplete=\"off\" (submit)=\"onSubmit(form)\">\n    <input type=\"hidden\" name=\"PMId\" [value]=\"service.formData.PMId\">\n    <div class=\"form-group\">\n      <div class=\"input-group\">\n        <div class=\"input-group-prepend\">\n          <div class=\"input-group-text bg-white\">\n            <i class=\"fas fa-user-circle\" [class.green-icon]=\"CardOwnerName.valid\" [class.red-icon]=\"CardOwnerName.invalid && CardOwnerName.touched\"></i>\n          </div>\n        </div>\n        <input name=\"CardOwnerName\" #CardOwnerName=\"ngModel\" [(ngModel)]=\"service.formData.CardOwnerName\" class=\"form-control\"\n          placeholder=\"Card Owner Name\" required>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <div class=\"input-group\">\n        <div class=\"input-group-prepend\">\n          <div class=\"input-group-text bg-white\">\n            <i class=\"far fa-credit-card\"  [class.green-icon]=\"CardNumber.valid\" [class.red-icon]=\"CardNumber.invalid && CardNumber.touched\"></i>\n          </div>\n        </div>\n        <input name=\"CardNumber\" #CardNumber=\"ngModel\" [(ngModel)]=\"service.formData.CardNumber\" \n        class=\"form-control\" placeholder=\"16 Digit Card Number\" required maxlength=\"16\" minlength=\"16\">\n      </div>\n    </div>\n    <div class=\"form-row\">\n      <div class=\"form-group col-md-7\">\n        <div class=\"input-group\">\n          <div class=\"input-group-prepend\">\n            <div class=\"input-group-text bg-white\">\n              <i class=\"fas fa-calendar-alt\"  [class.green-icon]=\"ExpirationDate.valid\" [class.red-icon]=\"ExpirationDate.invalid && ExpirationDate.touched\"></i>\n            </div>\n          </div>\n          <input name=\"ExpirationDate\" #ExpirationDate=\"ngModel\" [(ngModel)]=\"service.formData.ExpirationDate\" class=\"form-control\"\n            placeholder=\"MM/YY\" required maxlength=\"5\" minlength=\"5\">\n        </div>\n      </div>\n      <div class=\"form-group col-md-5\">\n        <div class=\"input-group\">\n          <div class=\"input-group-prepend\">\n            <div class=\"input-group-text bg-white\">\n              <i class=\"fas fa-key\"  [class.green-icon]=\"CVV.valid\" [class.red-icon]=\"CVV.invalid && CVV.touched\"></i>\n            </div>\n          </div>\n          <input type=\"password\" name=\"CVV\" #CVV=\"ngModel\" [(ngModel)]=\"service.formData.CVV\" class=\"form-control\" placeholder=\"CVV\"\n          required  maxlength=\"3\" minlength=\"3\">\n        </div>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <button class=\"btn btn-success btn-lg btn-block\" type=\"submit\" [disabled]=\"form.invalid\"><i class=\"fas fa-database\"></i> Submit</button>\n    </div>\n  </form>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-payment-details',\n  templateUrl: './payment-details.component.html',\n  styles: [\n  ]\n})\nexport class PaymentDetailsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n\n<div class=\"jumbtron\">\n    <h1 class=\"display-4 text-center\">Payment Detail Register</h1>\n    <hr>\n    <div class=\"row\">\n      <div class=\"col-md-5\">\n        <app-payment-detail></app-payment-detail>\n      </div>\n      <div class=\"col-md-7\">\n        <app-payment-detail-list></app-payment-detail-list>\n      </div>\n    </div>\n  </div>\n  </div>\n","\nimport { Injectable } from '@angular/core';\nimport { PaymentDetail } from './payment-detail.model';\nimport { HttpClient } from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PaymentDetailService {\n  formData: PaymentDetail;\n  readonly rootURL = 'http://localhost:51815/api';\n  list : PaymentDetail[];\n  constructor(private http: HttpClient) { }\n  postPaymentDetail() {\n    return this.http.post(this.rootURL + '/PaymentDetail', this.formData);\n  }\n  putPaymentDetail() {\n    return this.http.put(this.rootURL + '/PaymentDetail/'+ this.formData.PMId, this.formData);\n  }\n\n  deletePaymentDetail(id) {\n    return this.http.delete(this.rootURL + '/PaymentDetail/'+ id);\n  }\n  refreshList(){\n    this.http.get(this.rootURL + '/PaymentDetail')\n    .toPromise()\n    .then(res => this.list = res as PaymentDetail[]);\n    \n  }\n \n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:51815/api'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}